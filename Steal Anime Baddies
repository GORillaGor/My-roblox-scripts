-- SeriousExploitSuite
-- Advanced exploit GUI for Roblox with professional features and prompt automation.

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ProximityPromptService = game:GetService("ProximityPromptService")

-- === GUI SETUP ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SeriousExploitSuite"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 420, 0, 0)
frame.Position = UDim2.new(0.5, -210, 0.8, -210)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.ClipsDescendants = true
frame.Parent = screenGui

local uicorner = Instance.new("UICorner", frame)
uicorner.CornerRadius = UDim.new(0, 14)

local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"
shadow.Size = UDim2.new(1, 24, 1, 24)
shadow.Position = UDim2.new(-0.03, 0, -0.03, 0)
shadow.ImageColor3 = Color3.fromRGB(0,0,0)
shadow.ImageTransparency = 0.78
shadow.ZIndex = 0
shadow.Parent = frame

local headerBar = Instance.new("Frame")
headerBar.Size = UDim2.new(1, 0, 0, 44)
headerBar.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
headerBar.BorderSizePixel = 0
headerBar.Parent = frame
headerBar.ZIndex = 2
local headerBarCorner = Instance.new("UICorner", headerBar)
headerBarCorner.CornerRadius = UDim.new(0, 14)

local header = Instance.new("TextLabel")
header.Text = "SeriousExploitSuite"
header.Size = UDim2.new(1, -80, 1, 0)
header.Position = UDim2.new(0, 16, 0, 0)
header.BackgroundTransparency = 1
header.Font = Enum.Font.GothamBlack
header.TextSize = 21
header.TextStrokeTransparency = 0.8
header.TextColor3 = Color3.fromRGB(225,225,225)
header.TextXAlignment = Enum.TextXAlignment.Left
header.ZIndex = 3
header.Parent = headerBar

local closeButton = Instance.new("TextButton")
closeButton.Text = "X"
closeButton.Size = UDim2.new(0, 36, 0, 36)
closeButton.Position = UDim2.new(1, -42, 0.5, -18)
closeButton.BackgroundColor3 = Color3.fromRGB(180, 50, 60)
closeButton.TextColor3 = Color3.fromRGB(255,255,255)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 18
closeButton.ZIndex = 4
closeButton.BorderSizePixel = 0
closeButton.Parent = headerBar
local closeUICorner = Instance.new("UICorner", closeButton)
closeUICorner.CornerRadius = UDim.new(1,0)

local minimizeButton = Instance.new("TextButton")
minimizeButton.Text = "-"
minimizeButton.Size = UDim2.new(0, 32, 0, 32)
minimizeButton.Position = UDim2.new(1, -80, 0.5, -16)
minimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
minimizeButton.TextColor3 = Color3.fromRGB(195,195,195)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 22
minimizeButton.ZIndex = 4
minimizeButton.BorderSizePixel = 0
minimizeButton.Parent = headerBar
local minUICorner = Instance.new("UICorner", minimizeButton)
minUICorner.CornerRadius = UDim.new(1,0)

local contentFrame = Instance.new("Frame")
contentFrame.Name = "Content"
contentFrame.Size = UDim2.new(1, 0, 1, -44)
contentFrame.Position = UDim2.new(0, 0, 0, 44)
contentFrame.BackgroundColor3 = Color3.fromRGB(25,25,25)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = frame
local contentCorner = Instance.new("UICorner", contentFrame)
contentCorner.CornerRadius = UDim.new(0, 0)

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = contentFrame
UIListLayout.Padding = UDim.new(0, 7)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

local function statusRow(text, idx)
    local label = Instance.new("TextLabel")
    label.Text = text
    label.Size = UDim2.new(1, -30, 0, 27)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextColor3 = Color3.fromRGB(205, 205, 205)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.LayoutOrder = idx
    label.Parent = contentFrame
    return label
end


-- Removed status text rows for non-toggle features to make GUI more compact

-- Prompt TP+Activate toggle
local toggleRow = Instance.new("Frame")
toggleRow.Size = UDim2.new(1, -30, 0, 27)
toggleRow.BackgroundTransparency = 1
toggleRow.LayoutOrder = 8
toggleRow.Parent = contentFrame

local statusTP = Instance.new("TextLabel")
statusTP.Text = "Prompt TP+Activate"
statusTP.Size = UDim2.new(1, -64, 1, 0)
statusTP.Position = UDim2.new(0, 0, 0, 0)
statusTP.BackgroundTransparency = 1
statusTP.Font = Enum.Font.Gotham
statusTP.TextSize = 16
statusTP.TextColor3 = Color3.fromRGB(205, 205, 205)
statusTP.TextXAlignment = Enum.TextXAlignment.Left
statusTP.Parent = toggleRow

local toggleBtnTP = Instance.new("TextButton")
toggleBtnTP.Text = "ON"
toggleBtnTP.Size = UDim2.new(0, 48, 1, -4)
toggleBtnTP.Position = UDim2.new(1, -52, 0, 2)
toggleBtnTP.AnchorPoint = Vector2.new(1,0)
toggleBtnTP.BackgroundColor3 = Color3.fromRGB(40, 180, 110)
toggleBtnTP.TextColor3 = Color3.fromRGB(255,255,255)
toggleBtnTP.Font = Enum.Font.GothamBold
toggleBtnTP.TextSize = 15
toggleBtnTP.Parent = toggleRow
toggleBtnTP.BorderSizePixel = 0
local toggleUICornerTP = Instance.new("UICorner", toggleBtnTP)
toggleUICornerTP.CornerRadius = UDim.new(1,0)

-- TouchInterest Auto Trigger toggle
local tiRow = Instance.new("Frame")
tiRow.Size = UDim2.new(1, -30, 0, 27)
tiRow.BackgroundTransparency = 1
tiRow.LayoutOrder = 9
tiRow.Parent = contentFrame

local statusTI = Instance.new("TextLabel")
statusTI.Text = "TouchInterest: LockButton"
statusTI.Size = UDim2.new(1, -64, 1, 0)
statusTI.Position = UDim2.new(0, 0, 0, 0)
statusTI.BackgroundTransparency = 1
statusTI.Font = Enum.Font.Gotham
statusTI.TextSize = 16
statusTI.TextColor3 = Color3.fromRGB(205, 205, 205)
statusTI.TextXAlignment = Enum.TextXAlignment.Left
statusTI.Parent = tiRow

local toggleBtnTI = Instance.new("TextButton")
toggleBtnTI.Text = "ON"
toggleBtnTI.Size = UDim2.new(0, 48, 1, -4)
toggleBtnTI.Position = UDim2.new(1, -52, 0, 2)
toggleBtnTI.AnchorPoint = Vector2.new(1,0)
toggleBtnTI.BackgroundColor3 = Color3.fromRGB(40, 180, 110)
toggleBtnTI.TextColor3 = Color3.fromRGB(255,255,255)
toggleBtnTI.Font = Enum.Font.GothamBold
toggleBtnTI.TextSize = 15
toggleBtnTI.Parent = tiRow
toggleBtnTI.BorderSizePixel = 0
local toggleUICornerTI = Instance.new("UICorner", toggleBtnTI)
toggleUICornerTI.CornerRadius = UDim.new(1,0)

-- Collect TouchInterest Trigger toggle
local collectRow = Instance.new("Frame")
collectRow.Size = UDim2.new(1, -30, 0, 27)
collectRow.BackgroundTransparency = 1
collectRow.LayoutOrder = 10
collectRow.Parent = contentFrame

local statusCollect = Instance.new("TextLabel")
statusCollect.Text = "TouchInterest: Collect"
statusCollect.Size = UDim2.new(1, -64, 1, 0)
statusCollect.Position = UDim2.new(0, 0, 0, 0)
statusCollect.BackgroundTransparency = 1
statusCollect.Font = Enum.Font.Gotham
statusCollect.TextSize = 16
statusCollect.TextColor3 = Color3.fromRGB(205, 205, 205)
statusCollect.TextXAlignment = Enum.TextXAlignment.Left
statusCollect.Parent = collectRow

local toggleBtnCollect = Instance.new("TextButton")
toggleBtnCollect.Text = "ON"
toggleBtnCollect.Size = UDim2.new(0, 48, 1, -4)
toggleBtnCollect.Position = UDim2.new(1, -52, 0, 2)
toggleBtnCollect.AnchorPoint = Vector2.new(1,0)
toggleBtnCollect.BackgroundColor3 = Color3.fromRGB(40, 180, 110)
toggleBtnCollect.TextColor3 = Color3.fromRGB(255,255,255)
toggleBtnCollect.Font = Enum.Font.GothamBold
toggleBtnCollect.TextSize = 15
toggleBtnCollect.Parent = collectRow
toggleBtnCollect.BorderSizePixel = 0
local toggleUICornerCollect = Instance.new("UICorner", toggleBtnCollect)
toggleUICornerCollect.CornerRadius = UDim.new(1,0)

-- Prompt Test control row (all Steals / all Sells / Combo)
local promptTestRow = Instance.new("Frame")
promptTestRow.Size = UDim2.new(1, -30, 0, 33)
promptTestRow.BackgroundTransparency = 1
promptTestRow.LayoutOrder = 11
promptTestRow.Parent = contentFrame

local startStealBtn = Instance.new("TextButton")
startStealBtn.Text = "Steal Exploit"
startStealBtn.Size = UDim2.new(0.31, -4, 1, -2)
startStealBtn.Position = UDim2.new(0, 2, 0, 1)
startStealBtn.BackgroundColor3 = Color3.fromRGB(30, 140, 210)
startStealBtn.TextColor3 = Color3.new(1,1,1)
startStealBtn.Font = Enum.Font.GothamBold
startStealBtn.TextSize = 15
startStealBtn.Parent = promptTestRow
local btnCorner1 = Instance.new("UICorner", startStealBtn)
btnCorner1.CornerRadius = UDim.new(1, 0)

local startSellBtn = Instance.new("TextButton")
startSellBtn.Text = "Sell Exploit"
startSellBtn.Size = UDim2.new(0.31, -4, 1, -2)
startSellBtn.Position = UDim2.new(0.34, 2, 0, 1)
startSellBtn.BackgroundColor3 = Color3.fromRGB(200, 160, 40)
startSellBtn.TextColor3 = Color3.new(1,1,1)
startSellBtn.Font = Enum.Font.GothamBold
startSellBtn.TextSize = 15
startSellBtn.Parent = promptTestRow
local btnCorner2 = Instance.new("UICorner", startSellBtn)
btnCorner2.CornerRadius = UDim.new(1, 0)

local startComboBtn = Instance.new("TextButton")
startComboBtn.Text = "Combo Exploit"
startComboBtn.Size = UDim2.new(0.31, -4, 1, -2)
startComboBtn.Position = UDim2.new(0.68, 2, 0, 1)
startComboBtn.BackgroundColor3 = Color3.fromRGB(100, 90, 220)
startComboBtn.TextColor3 = Color3.new(1, 1, 1)
startComboBtn.Font = Enum.Font.GothamBold
startComboBtn.TextSize = 15
startComboBtn.Parent = promptTestRow
local btnCornerCombo = Instance.new("UICorner", startComboBtn)
btnCornerCombo.CornerRadius = UDim.new(1, 0)

local statusPromptCycle = statusRow("Prompt Exploit: Idle", 12)

-- === RARITY ESP TOGGLES ===
local rarityList = {"Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic"}
local rarityColors = {
    Common = Color3.fromRGB(180, 180, 180),
    Uncommon = Color3.fromRGB(80, 200, 120),
    Rare = Color3.fromRGB(60, 120, 255),
    Epic = Color3.fromRGB(180, 60, 255),
    Legendary = Color3.fromRGB(255, 200, 60),
    Mythic = Color3.fromRGB(255, 60, 120),
    Other = Color3.fromRGB(255, 255, 255)
}
local espToggles = {}
local espEnabled = {}
for _, rarity in ipairs(rarityList) do espEnabled[rarity] = false end
espEnabled.Other = false

local espRow = Instance.new("Frame")
espRow.Size = UDim2.new(1, -30, 0, 24)
espRow.BackgroundTransparency = 1
espRow.LayoutOrder = 13
espRow.Parent = contentFrame

local espLabel = Instance.new("TextLabel")
espLabel.Text = "ESP:"
espLabel.Size = UDim2.new(0, 38, 1, 0)
espLabel.Position = UDim2.new(0, 0, 0, 0)
espLabel.BackgroundTransparency = 1
espLabel.Font = Enum.Font.Gotham
espLabel.TextSize = 13
espLabel.TextColor3 = Color3.fromRGB(205, 205, 205)
espLabel.TextXAlignment = Enum.TextXAlignment.Left
espLabel.Parent = espRow

local function makeEspToggle(rarity, idx)
    local btn = Instance.new("TextButton")
    btn.Text = rarity
    btn.Size = UDim2.new(0, 44, 1, -4)
    btn.Position = UDim2.new(0, 40 + (idx-1)*48, 0, 2)
    btn.BackgroundColor3 = rarityColors[rarity] or rarityColors.Other
    btn.TextColor3 = Color3.fromRGB(30,30,30)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 11
    btn.Parent = espRow
    btn.BorderSizePixel = 0
    local btnCorner = Instance.new("UICorner", btn)
    btnCorner.CornerRadius = UDim.new(1, 0)
    btn.AutoButtonColor = true
    btn.TextTransparency = 0.5
    btn.BackgroundTransparency = 0.6
    btn.MouseButton1Click:Connect(function()
        espEnabled[rarity] = not espEnabled[rarity]
        btn.TextTransparency = espEnabled[rarity] and 0 or 0.5
        btn.BackgroundTransparency = espEnabled[rarity] and 0.2 or 0.6
    end)
    espToggles[rarity] = btn
end
for i, rarity in ipairs(rarityList) do makeEspToggle(rarity, i) end
makeEspToggle("Other", #rarityList+1)

-- Get Rarity for a prompt (returns string, or "Other")
local function getPromptRarity(prompt)
    local charModel = prompt.Parent and prompt.Parent.Parent
    if not (charModel and charModel:IsA("Model")) then return "Other" end
    local head = charModel:FindFirstChild("Head")
    if not head then return "Other" end
    local attach = head:FindFirstChild("OverHeadAttachment")
    if not attach then return "Other" end
    local charInfo = attach:FindFirstChild("CharacterInfo")
    if not charInfo then return "Other" end
    local frame = charInfo:FindFirstChild("Frame")
    if not frame then return "Other" end
    local rarity = frame:FindFirstChild("Rarity")
    if rarity and rarity:IsA("TextLabel") then
        local txt = tostring(rarity.Text or ""):gsub("%s+", "")
        for _, r in ipairs(rarityList) do
            if string.lower(txt) == string.lower(r) then return r end
        end
        return "Other"
    end
    return "Other"
end

-- ESP logic
local espAdorns = {}
local function clearESP()
    for _, adorn in pairs(espAdorns) do
        if adorn and adorn.Parent then pcall(function() adorn:Destroy() end) end
    end
    espAdorns = {}
end

local function updateESP()
    clearESP()
    for _, obj in ipairs(game:GetDescendants()) do
        if obj:IsA("ProximityPrompt") and obj.Parent then
            local rarity = getPromptRarity(obj)
            if espEnabled[rarity] then
                local part = obj.Parent
                if part:IsA("Attachment") or part:IsA("ProximityPrompt") then part = part.Parent end
                if part:IsA("Model") and part.PrimaryPart then part = part.PrimaryPart end
                if not part:IsA("BasePart") then
                    for _, child in ipairs(part:GetChildren()) do
                        if child:IsA("BasePart") then part = child; break end
                    end
                end
                if part:IsA("BasePart") then
                    local box = Instance.new("BoxHandleAdornment")
                    box.Adornee = part
                    box.AlwaysOnTop = true
                    box.ZIndex = 10
                    box.Size = part.Size
                    box.Color3 = rarityColors[rarity] or rarityColors.Other
                    box.Transparency = 0.5
                    box.Parent = workspace
                    table.insert(espAdorns, box)
                end
            end
        end
    end
end

for _, btn in pairs(espToggles) do
    btn.MouseButton1Click:Connect(function()
        updateESP()
    end)
end

task.spawn(function()
    while true do
        updateESP()
        task.wait(2)
    end
end)

-- === ANIMATION AND MINIMIZE ===
local openSize = UDim2.new(0, 420, 0, 530)
local minSize = UDim2.new(0, 420, 0, 60)
local minimized = false
local lastPos = frame.Position

local function tween(obj, info, prop)
    local t = TweenService:Create(obj, TweenInfo.new(info.t or 0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), prop)
    t:Play()
    return t
end

local function setMinimized(state)
    minimized = state
    if state then
        lastPos = frame.Position
        tween(frame, {t=0.21}, {Size = minSize})
        contentFrame.Visible = false
        minimizeButton.Text = "+"
    else
        frame.Position = lastPos
        tween(frame, {t=0.21}, {Size=openSize})
        task.delay(0.17, function() contentFrame.Visible = true end)
        minimizeButton.Text = "-"
    end
end

minimizeButton.MouseButton1Click:Connect(function()
    setMinimized(not minimized)
end)

local function openAnim()
    frame.Size = UDim2.new(0, 420, 0, 0)
    contentFrame.Visible = false
    tween(frame, {t=0.3}, {Size=openSize})
    task.delay(0.23, function() contentFrame.Visible = true end)
end

local function closeAnimAndDestroy()
    contentFrame.Visible = false
    tween(frame, {t=0.21}, {Size=UDim2.new(0, 420, 0, 0)}).Completed:Wait()
    screenGui:Destroy()
end

closeButton.MouseButton1Click:Connect(closeAnimAndDestroy)

local dragging, dragInput, dragStart, startPos
headerBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                lastPos = frame.Position
            end
        end)
    end
end)
headerBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        lastPos = frame.Position
    end
end)

openAnim()

-- === MAIN FUNCTIONALITY ===

local targetSize = Vector3.new(2048, 2048, 2048)
local function resizeRobberyDeposit(part)
    if part:IsA("BasePart") and part.Name == "RobberyDeposit" then
        if (part.Size - targetSize).magnitude > 0.1 then
            part.Size = targetSize
        end
    end
end

for _, obj in ipairs(workspace:GetDescendants()) do
    if obj:IsA("BasePart") and obj.Name == "RobberyDeposit" then
        resizeRobberyDeposit(obj)
    end
end

workspace.DescendantAdded:Connect(function(obj)
    if obj:IsA("BasePart") and obj.Name == "RobberyDeposit" then
        resizeRobberyDeposit(obj)
    end
end)

task.spawn(function()
    while true do
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("BasePart") and obj.Name == "RobberyDeposit" then
                resizeRobberyDeposit(obj)
            end
        end
        task.wait(2)
    end
end)

local function delBarrier(obj)
    if obj:IsA("Folder") and obj.Name == "Barrier" then
        pcall(function() obj:Destroy() end)
    end
end

for _, obj in ipairs(workspace:GetDescendants()) do delBarrier(obj) end
workspace.DescendantAdded:Connect(delBarrier)
task.spawn(function()
    while true do
        for _, obj in ipairs(workspace:GetDescendants()) do delBarrier(obj) end
        task.wait(2)
    end
end)

local function delWall(obj)
    if obj:IsA("BasePart") and obj.Name == "Wall" then
        pcall(function() obj:Destroy() end)
    end
end

for _, obj in ipairs(workspace:GetDescendants()) do delWall(obj) end
workspace.DescendantAdded:Connect(delWall)
task.spawn(function()
    while true do
        for _, obj in ipairs(workspace:GetDescendants()) do delWall(obj) end
        task.wait(2)
    end
end)

local function delPaidPads(obj)
    if obj:IsA("Folder") and obj.Name == "PaidPads" then
        pcall(function() obj:Destroy() end)
    end
end

for _, obj in ipairs(workspace:GetDescendants()) do delPaidPads(obj) end
workspace.DescendantAdded:Connect(delPaidPads)
task.spawn(function()
    while true do
        for _, obj in ipairs(workspace:GetDescendants()) do delPaidPads(obj) end
        task.wait(2)
    end
end)

task.spawn(function()
    while true do
        local char = player.Character or player.CharacterAdded:Wait()
        local hum = char and char:FindFirstChildWhichIsA("Humanoid")
        if hum and hum.WalkSpeed ~= 100 then
            hum.WalkSpeed = 100
        end
        task.wait(0.2)
    end
end)

UIS.JumpRequest:Connect(function()
    local char = player.Character
    local hum = char and char:FindFirstChildWhichIsA("Humanoid")
    if hum then
        hum:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-- --- STEAL PROMPT LOGIC WITH FREE CHECK ---
local function isStealPromptFree(prompt)
    local charModel = prompt.Parent and prompt.Parent.Parent
    if not (charModel and charModel:IsA("Model")) then return false end
    local head = charModel:FindFirstChild("Head")
    if not head then return false end
    local attach = head:FindFirstChild("OverHeadAttachment")
    if not attach then return false end
    local charInfo = attach:FindFirstChild("CharacterInfo")
    if not charInfo then return false end
    local frame = charInfo:FindFirstChild("Frame")
    if not frame then return false end
    local price = frame:FindFirstChild("Price")
    if price and price:IsA("TextLabel") then
        local txt = string.lower((price.Text or ""):gsub("%s+", ""))
        return txt == "free"
    end
    return false
end

local function isSell(prompt)
    local text = string.lower((prompt.ObjectText or "") .. (prompt.ActionText or ""))
    return string.find(text, "sell")
end

local function isSteal(prompt)
    local text = string.lower((prompt.ObjectText or "") .. (prompt.ActionText or ""))
    if string.find(text, "steal") then
        if isStealPromptFree(prompt) then
            return false
        end
        return true
    end
    return false
end

local function getPrompts(which)
    local out = {}
    for _, obj in ipairs(game:GetDescendants()) do
        if obj:IsA("ProximityPrompt") then
            if which == "sell" and isSell(obj) then
                table.insert(out, obj)
            elseif which == "steal" and isSteal(obj) then
                table.insert(out, obj)
            end
        end
    end
    if which == "steal" then
        -- Sort by rarity: Other, Mythic, Legendary, Epic, Rare, Uncommon, Common
        local rarityOrder = {"Other", "Mythic", "Legendary", "Epic", "Rare", "Uncommon", "Common"}
        table.sort(out, function(a, b)
            local ra, rb = getPromptRarity(a), getPromptRarity(b)
            local ia, ib = 8, 8
            for i, r in ipairs(rarityOrder) do if ra == r then ia = i end; if rb == r then ib = i end end
            return ia < ib
        end)
    end
    return out
end

local function enableStealOrSellPrompt(prompt)
    prompt.MaxActivationDistance = math.huge
    prompt.RequiresLineOfSight = false
    prompt.Exclusivity = Enum.ProximityPromptExclusivity.OneGlobally
    prompt.Enabled = true
    prompt.Style = Enum.ProximityPromptStyle.Default
    prompt.HoldDuration = prompt.HoldDuration or 0
    if not prompt:GetAttribute("_ssprompt_hooked") then
        prompt:SetAttribute("_ssprompt_hooked", true)
        prompt.PromptButtonHoldBegan:Connect(function()
            pcall(function() fireproximityprompt(prompt) end)
        end)
    end
end

local function checkPrompt(prompt)
    if isSteal(prompt) or isSell(prompt) then
        enableStealOrSellPrompt(prompt)
    end
end

for _, obj in ipairs(game:GetDescendants()) do
    if obj:IsA("ProximityPrompt") then
        checkPrompt(obj)
    end
end

game.DescendantAdded:Connect(function(obj)
    if obj:IsA("ProximityPrompt") then
        checkPrompt(obj)
    end
end)

task.spawn(function()
    while true do
        for _, prompt in ipairs(workspace:GetDescendants()) do
            if prompt:IsA("ProximityPrompt") and not prompt:GetAttribute("_ssprompt_hooked") then
                if isSteal(prompt) or isSell(prompt) then
                    enableStealOrSellPrompt(prompt)
                end
            end
        end
        task.wait(2)
    end
end)

local autoPromptTP = true
local function setToggleTP(state)
    if state then
        toggleBtnTP.Text = "ON"
        toggleBtnTP.BackgroundColor3 = Color3.fromRGB(40, 180, 110)
        statusTP.TextColor3 = Color3.fromRGB(140,255,140)
    else
        toggleBtnTP.Text = "OFF"
        toggleBtnTP.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
        statusTP.TextColor3 = Color3.fromRGB(255,140,140)
    end
end
setToggleTP(true)
toggleBtnTP.MouseButton1Click:Connect(function()
    autoPromptTP = not autoPromptTP
    setToggleTP(autoPromptTP)
end)

local function getCharRoot()
    local char = player.Character or player.CharacterAdded:Wait()
    return char and char:FindFirstChild("HumanoidRootPart")
end

local function getPromptPart(prompt)
    local part = prompt.Parent
    if part:IsA("Attachment") or part:IsA("ProximityPrompt") then
        part = part.Parent
    end
    if part:IsA("Model") and part.PrimaryPart then
        part = part.PrimaryPart
    end
    if not part:IsA("BasePart") then
        for _, child in ipairs(part:GetChildren()) do
            if child:IsA("BasePart") then
                part = child
                break
            end
        end
    end
    return part
end

ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
    if not autoPromptTP then return end
    local root = getCharRoot()
    local part = getPromptPart(prompt)
    if root and part and part:IsA("BasePart") then
        pcall(function() ProximityPromptService.PromptButtonHoldEnded:Fire(prompt) end)
        task.wait(0.03)
        root.CFrame = part.CFrame * CFrame.new(0, 3, 0)
        task.wait(0.1)
        local wasEnabled = prompt.Enabled
        prompt.Enabled = false
        task.wait(0.05)
        prompt.Enabled = wasEnabled
        task.wait(0.05)
        pcall(function() fireproximityprompt(prompt) end)
    end
end)

local tiAutoTrigger = true
local function setToggleTI(state)
    if state then
        toggleBtnTI.Text = "ON"
        toggleBtnTI.BackgroundColor3 = Color3.fromRGB(40, 180, 110)
        statusTI.TextColor3 = Color3.fromRGB(140,255,140)
    else
        toggleBtnTI.Text = "OFF"
        toggleBtnTI.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
        statusTI.TextColor3 = Color3.fromRGB(255,140,140)
    end
end
setToggleTI(true)
toggleBtnTI.MouseButton1Click:Connect(function()
    tiAutoTrigger = not tiAutoTrigger
    setToggleTI(tiAutoTrigger)
end)

local function ensureTouchInterest(part)
    if not part:FindFirstChildOfClass("TouchTransmitter") then
        local ti = Instance.new("TouchTransmitter")
        ti.Parent = part
    end
end

local function fireTouch(part)
    local char = player.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return end
    pcall(function()
        firetouchinterest(root, part, 0)
        task.wait(0.05)
        firetouchinterest(root, part, 1)
    end)
end

task.spawn(function()
    while true do
        if tiAutoTrigger then
            for _, obj in ipairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and obj.Name == "LockButton" then
                    ensureTouchInterest(obj)
                    fireTouch(obj)
                end
            end
        end
        task.wait(1)
    end
end)

-- TouchInterest trigger for "Collect" parts, togglable, every 10 seconds
local collectAutoTrigger = true
local function setToggleCollect(state)
    if state then
        toggleBtnCollect.Text = "ON"
        toggleBtnCollect.BackgroundColor3 = Color3.fromRGB(40, 180, 110)
        statusCollect.TextColor3 = Color3.fromRGB(140,255,140)
    else
        toggleBtnCollect.Text = "OFF"
        toggleBtnCollect.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
        statusCollect.TextColor3 = Color3.fromRGB(255,140,140)
    end
end
setToggleCollect(true)
toggleBtnCollect.MouseButton1Click:Connect(function()
    collectAutoTrigger = not collectAutoTrigger
    setToggleCollect(collectAutoTrigger)
end)
task.spawn(function()
    while true do
        if collectAutoTrigger then
            for _, obj in ipairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and obj.Name == "Collect" then
                    ensureTouchInterest(obj)
                    fireTouch(obj)
                end
            end
        end
        task.wait(10)
    end
end)

-- Prompt Test: Steal/Sell/Combo
local runningSteal, runningSell, runningCombo = false, false, false
local stealThread, sellThread, comboThread

local function tpAndFire(prompt)
    local root = getCharRoot()
    local part = getPromptPart(prompt)
    if root and part and part:IsA("BasePart") then
        root.CFrame = part.CFrame * CFrame.new(0, 3, 0)
        wait(0.1)
        local wasEnabled = prompt.Enabled
        prompt.Enabled = false
        wait(0.04)
        prompt.Enabled = wasEnabled
        wait(0.07)
        pcall(function() fireproximityprompt(prompt) end)
    end
end

local function setPromptCycleStatus(txt, col)
    statusPromptCycle.Text = txt
    if col then statusPromptCycle.TextColor3 = col end
end

local function startStealCycle()
    if runningSteal then return end
    runningSteal = true
    runningSell = false
    runningCombo = false
    setPromptCycleStatus("Steal Exploit: Running", Color3.fromRGB(80,180,255))
    startStealBtn.Text = "Stop Steal"
    startStealBtn.BackgroundColor3 = Color3.fromRGB(190, 60, 120)
    startSellBtn.Text = "Sell Exploit"
    startSellBtn.BackgroundColor3 = Color3.fromRGB(200, 160, 40)
    startComboBtn.Text = "Combo Exploit"
    startComboBtn.BackgroundColor3 = Color3.fromRGB(100, 90, 220)
    stealThread = task.spawn(function()
        while runningSteal do
            local stealList = getPrompts("steal")
            if #stealList == 0 then
                setPromptCycleStatus("Steal Exploit: No prompts", Color3.fromRGB(255,160,90))
                wait(0.3)
                continue
            end
            for idx, prompt in ipairs(stealList) do
                if not runningSteal then break end
                if prompt and prompt.Parent then
                    local rarity = getPromptRarity(prompt)
                    setPromptCycleStatus("Steal ["..rarity.."] "..idx.."/"..#stealList, Color3.fromRGB(80,180,255))
                    tpAndFire(prompt)
                    wait(0.06)
                end
            end
        end
        setPromptCycleStatus("Prompt Exploit: Idle", Color3.fromRGB(205,205,205))
        startStealBtn.Text = "Steal Exploit"
        startStealBtn.BackgroundColor3 = Color3.fromRGB(30, 140, 210)
    end)
end
local function stopStealCycle() runningSteal = false end

local function startSellCycle()
    if runningSell then return end
    runningSteal = false
    runningSell = true
    runningCombo = false
    setPromptCycleStatus("Sell Exploit: Running", Color3.fromRGB(230,200,80))
    startSellBtn.Text = "Stop Sell"
    startSellBtn.BackgroundColor3 = Color3.fromRGB(190, 60, 120)
    startStealBtn.Text = "Steal Exploit"
    startStealBtn.BackgroundColor3 = Color3.fromRGB(30, 140, 210)
    startComboBtn.Text = "Combo Exploit"
    startComboBtn.BackgroundColor3 = Color3.fromRGB(100, 90, 220)
    sellThread = task.spawn(function()
        while runningSell do
            local sellList = getPrompts("sell")
            if #sellList == 0 then
                setPromptCycleStatus("Sell Exploit: No prompts", Color3.fromRGB(255,160,90))
                wait(0.3)
                continue
            end
            for idx, prompt in ipairs(sellList) do
                if not runningSell then break end
                if prompt and prompt.Parent then
                    setPromptCycleStatus("Sell "..idx.."/"..#sellList, Color3.fromRGB(230,200,80))
                    tpAndFire(prompt)
                    wait(0.06)
                end
            end
        end
        setPromptCycleStatus("Prompt Exploit: Idle", Color3.fromRGB(205,205,205))
        startSellBtn.Text = "Sell Exploit"
        startSellBtn.BackgroundColor3 = Color3.fromRGB(200, 160, 40)
    end)
end
local function stopSellCycle() runningSell = false end

local function startComboCycle()
    if runningCombo then return end
    runningSteal = false
    runningSell = false
    runningCombo = true
    setPromptCycleStatus("Combo Exploit: Running", Color3.fromRGB(170,120,255))
    startComboBtn.Text = "Stop Combo"
    startComboBtn.BackgroundColor3 = Color3.fromRGB(190, 60, 120)
    startStealBtn.Text = "Steal Exploit"
    startStealBtn.BackgroundColor3 = Color3.fromRGB(30, 140, 210)
    startSellBtn.Text = "Sell Exploit"
    startSellBtn.BackgroundColor3 = Color3.fromRGB(200, 160, 40)
    comboThread = task.spawn(function()
        local stealIndex = 1
        while runningCombo do
            local stealList = getPrompts("steal")
            local sellList = getPrompts("sell")
            if #stealList > 0 then
                local stealPrompt = stealList[(stealIndex - 1) % #stealList + 1]
                if stealPrompt and stealPrompt.Parent then
                    setPromptCycleStatus("Combo Steal ["..stealIndex.."/"..#stealList.."]", Color3.fromRGB(80,180,255))
                    tpAndFire(stealPrompt)
                    stealIndex = stealIndex + 1
                    wait(0.07)
                end
            else
                setPromptCycleStatus("Combo: No Steal prompts", Color3.fromRGB(255,160,90))
                wait(0.2)
            end
            sellList = getPrompts("sell")
            if #sellList > 0 then
                for idx, sellPrompt in ipairs(sellList) do
                    if not runningCombo then break end
                    if sellPrompt and sellPrompt.Parent then
                        setPromptCycleStatus("Combo Sell ["..idx.."/"..#sellList.."]", Color3.fromRGB(230,200,80))
                        tpAndFire(sellPrompt)
                        wait(0.04)
                    end
                end
            else
                setPromptCycleStatus("Combo: No Sell prompts", Color3.fromRGB(255,160,90))
                wait(0.2)
            end
            wait(0.02)
        end
        setPromptCycleStatus("Prompt Exploit: Idle", Color3.fromRGB(205,205,205))
        startComboBtn.Text = "Combo Exploit"
        startComboBtn.BackgroundColor3 = Color3.fromRGB(100, 90, 220)
    end)
end
local function stopComboCycle() runningCombo = false end

startStealBtn.MouseButton1Click:Connect(function()
    if runningSteal then stopStealCycle() else startStealCycle() end
end)
startSellBtn.MouseButton1Click:Connect(function()
    if runningSell then stopSellCycle() else startSellCycle() end
end)
startComboBtn.MouseButton1Click:Connect(function()
    if runningCombo then stopComboCycle() else startComboCycle() end
end)

screenGui.AncestryChanged:Connect(function(_, parent)
    if not parent then
        runningSteal = false
        runningSell = false
        runningCombo = false
    end
end)
